<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.hust.top.dao.BeaconMapper" >
  <resultMap id="BaseResultMap" type="edu.hust.top.bean.Beacon" >
    <id column="beaconID" property="beaconid" jdbcType="INTEGER" />
    <result column="deviceID" property="deviceid" jdbcType="INTEGER" />
    <result column="UUID" property="uuid" jdbcType="VARCHAR" />
    <result column="major" property="major" jdbcType="INTEGER" />
    <result column="minor" property="minor" jdbcType="INTEGER" />
    <result column="floor" property="floor" jdbcType="INTEGER" />
    <result column="x" property="x" jdbcType="DOUBLE" />
    <result column="y" property="y" jdbcType="DOUBLE" />
    <result column="h" property="h" jdbcType="DOUBLE" />
    <result column="groupID" property="groupid" jdbcType="INTEGER" />
    <result column="buildingID" property="buildingid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    beaconID, deviceID, UUID, major, minor, floor, x, y, h, groupID, buildingID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.hust.top.bean.BeaconExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_beacon
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_beacon
    where beaconID = #{beaconid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_beacon
    where beaconID = #{beaconid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.hust.top.bean.BeaconExample" >
    delete from t_beacon
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.hust.top.bean.Beacon" >
    insert into t_beacon (beaconID, deviceID, UUID, 
      major, minor, floor, 
      x, y, h, groupID, 
      buildingID)
    values (#{beaconid,jdbcType=INTEGER}, #{deviceid,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, 
      #{major,jdbcType=INTEGER}, #{minor,jdbcType=INTEGER}, #{floor,jdbcType=INTEGER}, 
      #{x,jdbcType=DOUBLE}, #{y,jdbcType=DOUBLE}, #{h,jdbcType=DOUBLE}, #{groupid,jdbcType=INTEGER}, 
      #{buildingid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="edu.hust.top.bean.Beacon" >
    insert into t_beacon
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="beaconid != null" >
        beaconID,
      </if>
      <if test="deviceid != null" >
        deviceID,
      </if>
      <if test="uuid != null" >
        UUID,
      </if>
      <if test="major != null" >
        major,
      </if>
      <if test="minor != null" >
        minor,
      </if>
      <if test="floor != null" >
        floor,
      </if>
      <if test="x != null" >
        x,
      </if>
      <if test="y != null" >
        y,
      </if>
      <if test="h != null" >
        h,
      </if>
      <if test="groupid != null" >
        groupID,
      </if>
      <if test="buildingid != null" >
        buildingID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="beaconid != null" >
        #{beaconid,jdbcType=INTEGER},
      </if>
      <if test="deviceid != null" >
        #{deviceid,jdbcType=INTEGER},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        #{major,jdbcType=INTEGER},
      </if>
      <if test="minor != null" >
        #{minor,jdbcType=INTEGER},
      </if>
      <if test="floor != null" >
        #{floor,jdbcType=INTEGER},
      </if>
      <if test="x != null" >
        #{x,jdbcType=DOUBLE},
      </if>
      <if test="y != null" >
        #{y,jdbcType=DOUBLE},
      </if>
      <if test="h != null" >
        #{h,jdbcType=DOUBLE},
      </if>
      <if test="groupid != null" >
        #{groupid,jdbcType=INTEGER},
      </if>
      <if test="buildingid != null" >
        #{buildingid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.hust.top.bean.BeaconExample" resultType="java.lang.Integer" >
    select count(*) from t_beacon
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_beacon
    <set >
      <if test="record.beaconid != null" >
        beaconID = #{record.beaconid,jdbcType=INTEGER},
      </if>
      <if test="record.deviceid != null" >
        deviceID = #{record.deviceid,jdbcType=INTEGER},
      </if>
      <if test="record.uuid != null" >
        UUID = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null" >
        major = #{record.major,jdbcType=INTEGER},
      </if>
      <if test="record.minor != null" >
        minor = #{record.minor,jdbcType=INTEGER},
      </if>
      <if test="record.floor != null" >
        floor = #{record.floor,jdbcType=INTEGER},
      </if>
      <if test="record.x != null" >
        x = #{record.x,jdbcType=DOUBLE},
      </if>
      <if test="record.y != null" >
        y = #{record.y,jdbcType=DOUBLE},
      </if>
      <if test="record.h != null" >
        h = #{record.h,jdbcType=DOUBLE},
      </if>
      <if test="record.groupid != null" >
        groupID = #{record.groupid,jdbcType=INTEGER},
      </if>
      <if test="record.buildingid != null" >
        buildingID = #{record.buildingid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_beacon
    set beaconID = #{record.beaconid,jdbcType=INTEGER},
      deviceID = #{record.deviceid,jdbcType=INTEGER},
      UUID = #{record.uuid,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=INTEGER},
      minor = #{record.minor,jdbcType=INTEGER},
      floor = #{record.floor,jdbcType=INTEGER},
      x = #{record.x,jdbcType=DOUBLE},
      y = #{record.y,jdbcType=DOUBLE},
      h = #{record.h,jdbcType=DOUBLE},
      groupID = #{record.groupid,jdbcType=INTEGER},
      buildingID = #{record.buildingid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.hust.top.bean.Beacon" >
    update t_beacon
    <set >
      <if test="deviceid != null" >
        deviceID = #{deviceid,jdbcType=INTEGER},
      </if>
      <if test="uuid != null" >
        UUID = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=INTEGER},
      </if>
      <if test="minor != null" >
        minor = #{minor,jdbcType=INTEGER},
      </if>
      <if test="floor != null" >
        floor = #{floor,jdbcType=INTEGER},
      </if>
      <if test="x != null" >
        x = #{x,jdbcType=DOUBLE},
      </if>
      <if test="y != null" >
        y = #{y,jdbcType=DOUBLE},
      </if>
      <if test="h != null" >
        h = #{h,jdbcType=DOUBLE},
      </if>
      <if test="groupid != null" >
        groupID = #{groupid,jdbcType=INTEGER},
      </if>
      <if test="buildingid != null" >
        buildingID = #{buildingid,jdbcType=INTEGER},
      </if>
    </set>
    where beaconID = #{beaconid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.hust.top.bean.Beacon" >
    update t_beacon
    set deviceID = #{deviceid,jdbcType=INTEGER},
      UUID = #{uuid,jdbcType=VARCHAR},
      major = #{major,jdbcType=INTEGER},
      minor = #{minor,jdbcType=INTEGER},
      floor = #{floor,jdbcType=INTEGER},
      x = #{x,jdbcType=DOUBLE},
      y = #{y,jdbcType=DOUBLE},
      h = #{h,jdbcType=DOUBLE},
      groupID = #{groupid,jdbcType=INTEGER},
      buildingID = #{buildingid,jdbcType=INTEGER}
    where beaconID = #{beaconid,jdbcType=INTEGER}
  </update>
</mapper>